on:
  push:
  pull_request:

name: run-tests

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # Checkout branch into the runner
      - uses: r-lib/actions/setup-r@master # Set up R runtime
        with:
          r-version: 'release'
          
      - name: Setup renv # Set up R env to install packages
        run: |
          install.packages('remotes')
          install.packages('curl')
          install.packages('renv')
        shell: Rscript {0}
        
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Install Gdal
        run: sudo apt install libgdal-dev             
        
      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
      - name: Install dependencies # Install the dependencies eg. Dplyr, tidyverse etc
      
        run: renv::restore()
        shell: Rscript {0}
        
      - name: source app.R
        shell: Rscript {0}
        run: |
          source('app.R')
      - name: source packages
        shell: Rscript {0}
        run: |
          source('packages.R')  
    
  
      - name: source test scripts
        shell: Rscript {0}
        run: |
          source('unit_tests/test_cleaned_data.R')
          
      - name: Upload test results
        if: failure()||success()
        uses: actions/upload-artifact@master
        with:
          name: tests
          path: unit_tests

   
