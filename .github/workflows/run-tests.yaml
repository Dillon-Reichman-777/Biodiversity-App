on:
  push:
  pull_request:
  
jobs:
  generate-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # Checkout branch into the runner
      - uses: r-lib/actions/setup-r@master # Set up R runtime
        with:
          r-version: 'release'
          
      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Setup renv # Set up R env to install packages
        run: |
          install.packages('remotes')
          install.packages('renv')
        shell: Rscript {0}
        
      - uses: actions/cache@v2 # Cache packages so won't be compiled everytime job is run
        with:
          path: ~/.local/share/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      - name: Install dependencies # Install the dependencies eg. Dplyr, tidyverse etc
        run: renv::restore()
        shell: Rscript {0}
      - name: Source app.R # Run the script
        run: source("app.R")
        shell: Rscript {0}

  
      - name: Generate data # Run the script
        run: source("unit_tests/test_cleaned_data.R")
        shell: Rscript {0}
